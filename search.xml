<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo 操作</title>
    <url>/2025/09/14/hexo/</url>
    <content><![CDATA[<h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><p>控制台指令遵循以下格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>其中，<code>layout</code> 是可选的，默认为 <code>post</code>;<code>title</code> 是文章的标题。<br>例如，要创建一个名为 “Hello World” 的文章，使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure>
<p>这将在 <code>source/_posts</code> 目录下创建一个名为 <code>hello.md</code> 的文件。<br>layout 为布局，不同的布局存放在不同的路径之下，说明如下表：</p>
<table>
<thead>
<tr>
<th>布局</th>
<th>路径</th>
</tr>
</thead>
<tbody><tr>
<td>post</td>
<td>source&#x2F;_posts</td>
</tr>
<tr>
<td>draft</td>
<td>source&#x2F;_drafts</td>
</tr>
<tr>
<td>page</td>
<td>source</td>
</tr>
</tbody></table>
<p>如果禁用布局，可以在文章的 Front Matter 中添加 <code>layout: false</code>。</p>
<p><code>title</code> 是文章的标题，默认情况下，Hexo 会将 <code>title</code> 转换为 URL 路径。<br>如果不想使用默认的 URL 路径，可以在文章的 Front Matter 中添加 <code>permalink</code>。<br>例如，要将 <code>hello</code> 的 URL 路径设置为 <code>hello-world</code>，可以在文章的 Front Matter 中添加以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">hello-world</span></span><br></pre></td></tr></table></figure>
<h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p>Front Matter 是文章的元数据，用于描述文章的属性。<br>Front Matter 以 <code>---</code> 分隔，位于文章的开头。<br>例如，以下是一个文章的 Front Matter：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2025-09-14 15:37:36</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>Front Matter 中的属性可以是任何有效的 YAML 数据。</p>
<h3 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h3><table>
<thead>
<tr>
<th>设置</th>
<th>描述</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>layout</td>
<td>布局</td>
<td>post</td>
</tr>
<tr>
<td>title</td>
<td>标题</td>
<td>文章文件名</td>
</tr>
<tr>
<td>date</td>
<td>日期</td>
<td>文件创建时间</td>
</tr>
<tr>
<td>updated</td>
<td>更新日期</td>
<td>文件更新时间</td>
</tr>
<tr>
<td>comments</td>
<td>是否启用评论</td>
<td>true</td>
</tr>
<tr>
<td>tags</td>
<td>标签</td>
<td>[]</td>
</tr>
<tr>
<td>categories</td>
<td>分类</td>
<td>[]</td>
</tr>
<tr>
<td>permalink</td>
<td>覆盖文章的永久链接. 永久链接应该以 &#x2F; 或 .html 结尾</td>
<td>null</td>
</tr>
<tr>
<td>excerpt</td>
<td>纯文本的页面摘要</td>
<td>[]</td>
</tr>
<tr>
<td>disablenujunkies</td>
<td>启用时禁用 Nunjucks 标签<code>&#123;&#123; &#125;&#125;/&#123;% %&#125;</code>和 标签插件 的渲染功能</td>
<td>false</td>
</tr>
<tr>
<td>lang</td>
<td>文章的语言</td>
<td>继承自<code>_config.yml</code></td>
</tr>
<tr>
<td>published</td>
<td>是否发布文章</td>
<td>对于 <code>_posts</code> 下的文章为 <code>true</code>，对于 <code>_draft</code> 下的文章为 <code>false</code></td>
</tr>
</tbody></table>
<h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>根据 <code>_config.yml</code> 中 default_layout 的设置，默认布局是 post 。 当文章中的布局被禁用(<code>layout: false</code>)，它将不会使用主题处理。 然而，它仍然会被任何可用的渲染引擎渲染：如果一篇文章是用 Markdown 写的，并且安装了 Markdown 渲染引擎（比如默认的 <code>hexo-renderer-marked</code>)，它将被渲染成HTML。</p>
<p>除非通过 <code>disableNunjucks</code> 设置或 渲染引擎 禁用，否则无论布局如何，标签插件 总是被处理。</p>
<h3 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h3><p>只有文章支持分类和标签。 分类按顺序应用于文章，从而形成分类和子分类的层次结构。 标签是在相同的层次结构上定义的，因此它们的出现顺序不重要。<br>示例</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Sports</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Football</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Injury</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Fight</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Shocking</span></span><br></pre></td></tr></table></figure>
<p>如果你想应用多个分类层次结构，请使用一个名称列表而不是一个单个名称。 如果 Hexo 在帖子上看到像这种方式定义的分类，它会将该帖子的每个分类视为其自己的独立层次结构。<br>示例</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> [<span class="string">Sports</span>, <span class="string">Football</span>]</span><br><span class="line">  <span class="bullet">-</span> [<span class="string">Sports</span>, <span class="string">Basketball</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="string">Rivalries</span></span><br><span class="line">  <span class="bullet">-</span> [<span class="string">MLB</span>, <span class="string">American</span> <span class="string">League</span>, <span class="string">Boston</span> <span class="string">Red</span> <span class="string">Sox</span>]</span><br></pre></td></tr></table></figure>
<h2 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h2><p>草稿是未发布的文章。 草稿以 <code>_drafts</code> 文件夹中的文件存储。 草稿的文件名称不影响其 URL 路径。 草稿的 URL 路径由 <code>permalink</code> 定义。 如果未定义 <code>permalink</code>，则草稿的 URL 路径将与草稿的文件名称相同。<br>要创建一个草稿，请使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new draft <span class="string">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure>
<p>这将在 <code>source/_drafts</code> 目录下创建一个名为 <code>hello.md</code> 的文件。<br>要发布草稿，请使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo publish <span class="string">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure>
<p>这将将 <code>hello.md</code> 移动到 <code>source/_posts</code> 目录下，并将其发布到网站上。<br>要删除草稿，请使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="string">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure>
<p>这将删除 <code>source/_drafts</code> 目录下的 <code>hello.md</code> 文件。</p>
<h2 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h2><p>页面是独立的页面，而不是文章。 页面以 <code>source</code> 文件夹中的文件存储。 页面的文件名称不影响其 URL 路径。 页面的 URL 路径由 <code>permalink</code> 定义。 如果未定义 <code>permalink</code>，则页面的 URL 路径将与页面的文件名称相同。<br>要创建一个页面，请使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;test&quot;</span></span><br></pre></td></tr></table></figure>
<p>这将在 <code>source</code> 目录下创建一个名为 <code>test</code>路径，路径下存在<code>index.md</code>文件。</p>
<h2 id="全局资源文件夹"><a href="#全局资源文件夹" class="headerlink" title="全局资源文件夹"></a>全局资源文件夹</h2><p>资源（Asset）代表 <code>source</code> 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。 比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 <code>source/images</code> 文件夹中。 然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们。</p>
<h3 id="文章资源文件夹"><a href="#文章资源文件夹" class="headerlink" title="文章资源文件夹"></a>文章资源文件夹</h3><p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。 这个稍微有些复杂但是管理资源非常方便的功能可以通过将 config.yml 文件中的 post_asset_folder 选项设为 true 来打开。 </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>打开后，Hexo会在文章的 source 目录下创建一个文件夹，该文件夹的名称与文章的名称相同。 例如，如果你有一篇名为 <code>hello world</code> 的文章，那么你可以将图片等资源放在 <code>source/_posts/hello-world</code> 文件夹中。 然后通过类似于 <code>![](/mages/image.jpg)</code> 的方法访问它们。</p>
<p><img src="/2025/09/14/hexo/images/zhaozhao.png" alt="&quot;朝朝&quot;"></p>
<h3 id="相对路径引用的标签插件"><a href="#相对路径引用的标签插件" class="headerlink" title="相对路径引用的标签插件"></a>相对路径引用的标签插件</h3><p>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。 在Hexo 2时代，社区创建了很多插件来解决这个问题。 但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。 这使得你可以更简单地在文章中引用你的资源。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% asset<span class="emphasis">_path slug %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% asset_</span>img slug [title] %&#125;</span><br><span class="line">&#123;% asset<span class="emphasis">_link slug [title] %&#125;</span></span><br></pre></td></tr></table></figure>
<p>比如说：当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](example.jpg)</code> ，它将 不会 出现在首页上。<br>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% asset<span class="emphasis">_img images/zhaozhao.png This is an example image %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% asset_</span>img &quot;spaced asset.jpg&quot; &quot;spaced title&quot; %&#125;</span><br></pre></td></tr></table></figure>
<img src="/2025/09/14/hexo/zhaozhao.png" class="" title="This is an example image">
<h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment"># 清除缓存文件 (db.json) 和已生成的静态文件 (public)。</span></span><br><span class="line">hexo generate <span class="comment"># 生成静态文件。您可以使用 hexo generate -d, hexo g -d 来合并生成与部署命令。</span></span><br><span class="line">hexo deploy <span class="comment"># 部署到远程仓库。</span></span><br><span class="line">hexo server <span class="comment"># hexo s</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
        <category>Hexo操作</category>
      </categories>
      <tags>
        <tag>Hexo,Hexo操作</tag>
      </tags>
  </entry>
  <entry>
    <title>qmake</title>
    <url>/2025/09/12/qmake/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="项目组织结构"><a href="#项目组织结构" class="headerlink" title="项目组织结构"></a>项目组织结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyQtProject/</span><br><span class="line">│</span><br><span class="line">├── MyQtProject.pro                  # Qt项目文件</span><br><span class="line">│</span><br><span class="line">├── src/                             # 源代码目录</span><br><span class="line">│   ├── main.cpp                     # 主函数</span><br><span class="line">│   ├── &lt;ModuleName&gt;/                # 模块目录</span><br><span class="line">│       ├── &lt;ModuleName&gt;.h           # 头文件</span><br><span class="line">│       ├── &lt;ModuleName&gt;.cpp         # 源文件</span><br><span class="line">│       └── ...</span><br><span class="line">│</span><br><span class="line">├── include/                         # 头文件目录（可选，根据项目情况）</span><br><span class="line">│   ├── &lt;ModuleName&gt;/                # 模块头文件目录</span><br><span class="line">│       ├── &lt;ModuleName&gt;.h           # 头文件</span><br><span class="line">│       └── ...</span><br><span class="line">│</span><br><span class="line">├── lib/                             # 第三方库或自定义库目录（可选）</span><br><span class="line">│   ├── &lt;LibraryName&gt;/</span><br><span class="line">│       ├── include/                 # 库头文件目录</span><br><span class="line">│       ├── lib/                     # 库文件目录</span><br><span class="line">│       └── ...</span><br><span class="line">│</span><br><span class="line">├── doc/                             # 文档目录（可选）</span><br><span class="line">│   └── ...</span><br><span class="line">│</span><br><span class="line">├── tests/                           # 测试代码目录（可选）</span><br><span class="line">│   └── ...</span><br><span class="line">│</span><br><span class="line">└── build/                           # 构建输出目录（通常不纳入版本控制）</span><br><span class="line">    └── ...</span><br></pre></td></tr></table></figure>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>QT</category>
        <category>QT配置</category>
      </categories>
      <tags>
        <tag>QT,QT配置</tag>
      </tags>
  </entry>
</search>
